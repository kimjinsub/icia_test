<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- webapp/resources폴더 이용 -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/images/**" location="/WEB-INF/views/images/" />
	<resources mapping="/css/**" location="/WEB-INF/views/css/" />
	<resources mapping="/js/**" location="/WEB-INF/views/js/" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.board.jinsub" />
	
	<!-- Spring JNDI :: DBCP((커넥션풀 이용시)) -->
	<!-- <beans:bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="myOracle"/>
		<beans:property name="resourceRef" value="true"/>
	</beans:bean> -->
	
	<!-- DriverSpy이용해, 로그를 출력하기 위해서 jdbc설정 : Connection이 1개존재 -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="net.sf.log4jdbc.DriverSpy"/>
		<beans:property name="url"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"/>
		<beans:property name="username" value="ICIA3"/>
		<beans:property name="password" value="1111"/>
	</beans:bean>
	
	<!-- sqlSessionFactory :: mybatis가 사용 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		
		<beans:property name="configLocation" 
			value="classpath:com/board/jinsub/dao/mybatis-conf.xml"/>
			
		<beans:property name="mapperLocations"
			value="classpath:com/**/mapper/*.xml"/>
	</beans:bean>
	
	<!-- DAO using -->
	<beans:bean id="mDao"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property name="mapperInterface"
			value="com.board.jinsub.dao.IMemberDao" />
	</beans:bean>
	
	<beans:bean id="bDao"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property name="mapperInterface"
			value="com.board.jinsub.dao.IBoardDao" />
	</beans:bean>
	
	<!-- 트랜잭션처리 -->
	<beans:bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">	
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	<!-- @Transactional 어노테이션 사용을 위해 -->
	<!-- 반드시 servlet-context.xml에 설정해야함 -->
	<!-- root는 스프링전반에 걸친 설정, servlet-context는 web프로젝트에 관한것 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- Session Interceptor(가로채기) -->
	<interceptors>
		<interceptor>
			<!-- mapping의 모든 요청은 Controller에 도착하기 전에 가로챈다 -->
			<mapping path="/*"/>
			<!-- exclude-mapping의 요청은 가로채지 않는다 -->
			<exclude-mapping path="/"/>
			<exclude-mapping path="/access"/>
			<exclude-mapping path="/joinFrm"/>
			<exclude-mapping path="/memberInsert"/>
			<exclude-mapping path="/boardList"/>
			<beans:bean class="com.board.jinsub.userClass.SessionInterceptor"/>
		</interceptor>
	</interceptors>
</beans:beans>